pipeline{
    agent any
    parameters {
        choice(name: 'BRANCH', choices: ['dev', 'test','prod','master'])
    }
    stages{
        stage('SCM'){
            steps{
                // git credentialsId: 'xgen_github', url: 'https://github.com/xgenOsama/BackHouseM.git'
               // git credentialsId: 'xgen_github', branch: "master", url: 'https://github.com/xgenOsama/BackHouseM.git'
                sh "git checkout ${params.BRANCH}"
            }
        }
        stage('docker build'){
            steps{
                sh "docker build . -t xgenosama/backhouse"
            }
        }
        stage('dockerhub push'){
            steps{
                withCredentials([string(credentialsId: 'my_docker_hub_password', variable: 'DockerHubPwd')]) {
                    sh "docker login -u xgenosama -p ${DockerHubPwd}"
                }
                sh "docker push  xgenosama/backhouse"
            }
        }
        stage('dockerhub pull image'){
            steps{
                 if (params.BRANCH == 'dev' || params.BRANCH == "test" || params.BRANCH == "prod") {
                    withCredentials([string(credentialsId: 'my_docker_hub_password', variable: 'DockerHubPwd')]) {
                        sh "docker login -u xgenosama -p ${DockerHubPwd}"
                    }
                    sh "docker pull  xgenosama/backhouse"
                 }            
            }
        }
        stage('apply deployment to minikube'){
            steps{
                // git credentialsId: 'xgen_github', branch: "${params.BRANCH}", url: 'https://github.com/xgenOsama/BackHouseM.git'
               if (params.BRANCH == 'dev' || params.BRANCH == "test" || params.BRANCH == "prod") {
                    sh "kubectl apply -f namespace.yaml"
                    sh "kubectl apply -f deployment.yaml"
                    sh "kubectl apply -f service.yaml"
                }
            }
        }
    }
}
    
